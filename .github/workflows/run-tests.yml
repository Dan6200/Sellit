# cspell:disable
# View results on github.com
# gh CLI commands to view results
# [list of all workflows]:
# gh run list
# [show the latest results of a specific workflow]
# gh run list --workflow=<name_of_test_file>.yml -L 1
# [Extract the run id]:
# run_id=$(gh run list --workflow=<name_of_test_file>.yml -L 1|awk -F'\t' '{print $7}') && echo $run_id
# [watch a workflow run]:
# gh run watch <run_id>
# [view details of a run]:
# gh run view <run_id>
# [view log details of a run]:
# gh run view <run_id> --log
# [view only log details]:
# gh run view <run_id> --log|awk -F'\t' '{print $3}'|awk -F'Z ' '{print $2}'
# [One line]:
# run_id=$(gh run list -L 1|awk -F'\t' '{print $7}') && gh run view $run_id --log-failed|awk -F'\t' '{print $3}'|awk -F'Z ' '{print $2}'
# [Download artifacts of a run]:
# gh run download <run_id>
# [Rerun a workflow run]:
# gh run rerun <run_id>

# Don't run on main
# name: Thrift-app Testing
#
# on:
#   push:
#     branches: [main, dev]
#   pull_request:
#     branches: [main, dev]
#
# jobs:
#   build:
#     runs-on: ubuntu-latest
#
#     services:
#       postgres:
#         image: postgres:15
#         env:
#           POSTGRES_USER: postgres
#           POSTGRES_PASSWORD: postgres
#           POSTGRES_DB: test
#         ports:
#           - 5432:5432
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5
#
#       redis:
#         image: redis
#         ports:
#           - 6379:6379
#
#     steps:
#       - uses: actions/checkout@v2
#         with:
#           node-version: 20
#       - name: Run SQL script
#         run: |
#           docker run -e PGPASSWORD=postgres -v ${{ github.workspace }}:/scripts/ --network host postgres psql -h localhost -U postgres -d test -f /scripts/server/src/db/sql-scripts/create-table.sql
#
#       - name: Use Node.js 20
#         uses: actions/setup-node@v2
#         with:
#           node-version: 20
#       - run: npm install -g pnpm
#       - run: pnpm install
#       - run: pnpm add tsconfig-paths --save-dev
#       - run: pnpm build
#       - name: Start server
#         run: |
#           pnpm start-test &> results.log &
#           sleep 5
#         env:
#           ACTIONS_STEP_DEBUG: true
#           CI: true
#           CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
#           CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
#           CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
#           PG_URL: 'postgres://postgres:postgres@localhost:5432/test'
#       - name: Run tests
#         run: pnpm tests
#         env:
#           ACTIONS_STEP_DEBUG: true
#           CI: true
#           CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
#           CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
#           CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
#           PG_URL: 'postgres://postgres:postgres@localhost:5432/test'
#           SERVER: localhost:1024
#       - name: View results
#         if: failure()
#         run: cat results.log
