# cspell:disable
# View results on github.com
# gh CLI commands to view results
# [list of all workflows]:
# gh run list
# [show the latest results of a specific workflow]
# gh run list --workflow=<name_of_test_file>.yml -L 1
# [Extract the run id]:
# run_id=$(gh run list --workflow=<name_of_test_file>.yml -L 1|awk -F'\t' '{print $7}') && echo $run_id
# [watch a workflow run]:
# gh run watch <run_id>
# [view details of a run]:
# gh run view <run_id>
# [view log details of a run]:
# gh run view <run_id> --log
# [view only log details]:
# gh run view <run_id> --log|awk -F'\t' '{print $3}'|awk -F'Z ' '{print $2}'
# [One line]:
# run_id=$(gh run list -L 1|awk -F'\t' '{print $7}') && gh run view $run_id --log-failed|awk -F'\t' '{print $3}'|awk -F'Z ' '{print $2}'
# [Download artifacts of a run]:
# gh run download <run_id>
# [Rerun a workflow run]:
# gh run rerun <run_id>

name: Thrift-app Testing

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          node-version: 22

      - name: Setup Supabase CLI
        if: env.BACKUP_ENABLED == 'true'
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Start Supabase
        run: supabase start

      - name: Use Node.js 22
        uses: actions/setup-node@v2
        with:
          node-version: 22
      - run: npm install -g pnpm
      - run: pnpm install
      - run: pnpm build
      - name: Start server
        run: |
          pnpm start-test &> results.log &
          sleep 5
        env:
          ACTIONS_STEP_DEBUG: true
          CI: true
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          SUPABASE_URL: http://localhost:54321
          SUPABASE_DB_URL: 'postgresql://postgres:postgres@127.0.0.1:54322/postgres'
      - name: Run tests
        run: pnpm tests
        env:
          ACTIONS_STEP_DEBUG: true
          CI: true
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          SERVER: localhost:1024
          SUPABASE_URL: http://localhost:54321
          SUPABASE_DB_URL: 'postgresql://postgres:postgres@127.0.0.1:54322/postgres'
      - name: View results
        if: failure()
        run: cat results.log

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Project
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_DEPLOY_ENABLED: true
